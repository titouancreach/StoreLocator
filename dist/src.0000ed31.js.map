{"version":3,"sources":["index.js"],"names":["Element","prototype","remove","parentNode","removeChild","airtableDatabase","Airtable","apiKey","base","mapboxgl","accessToken","map","Map","container","style","center","zoom","scrollZoom","getStoreListFromAirtable","Promise","resolve","select","view","firstPage","err","records","store","type","geometry","coordinates","Longitude","Latitude","properties","name","Name","description","DescriptionHtml","getGeoJsonStores","features","addMarkers","buildLocationList","flyToStore","createPopUp","currentFeature","popUps","document","getElementsByClassName","Popup","closeOnClick","setLngLat","setHTML","address","addTo","flyTo","data","forEach","i","prop","listing","getElementById","appendChild","createElement","id","className","link","href","innerHTML","details","city","phone","phoneFormatted","addEventListener","e","feature","activeItem","classList","add","stores","marker","el","Marker","offset","stopPropagation","on","addSource"],"mappings":"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","file":"src.0000ed31.js","sourceRoot":"../src","sourcesContent":["if (!(\"remove\" in Element.prototype)) {\n  Element.prototype.remove = function () {\n    if (this.parentNode) {\n      this.parentNode.removeChild(this);\n    }\n  };\n}\n\nconst airtableDatabase = new Airtable({ apiKey: \"keyivOeI56X4blAIx\" }).base(\n  \"appozkf4aTSkgrAEv\"\n);\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoidGl0b3VhbmNyZWFjaCIsImEiOiJja2hheDd2MnIwa280MnBrNG5wazhmbXY3In0.hIQY0ILrWDV0RVSO5HWcYQ\";\n\nconst map = new mapboxgl.Map({\n  container: \"map\",\n  style: \"mapbox://styles/mapbox/light-v10\",\n  center: [-77.034084142948, 38.909671288923],\n  zoom: 13,\n  scrollZoom: true,\n});\n\nasync function* getStoreListFromAirtable() {\n  const records = await new Promise((resolve) => {\n    base(\"StoreLocator\")\n      .select({\n        view: \"Grid view\",\n      })\n      .firstPage(function (err, records) {\n        resolve(records);\n      });\n  });\n\n  for (let store in records) {\n    yield {\n      type: \"feature\",\n      geometry: {\n        type: \"point\",\n        coordinates: [store.Longitude, store.Latitude],\n        properties: {\n          name: store.Name,\n          description: store.DescriptionHtml,\n        },\n      },\n    };\n  }\n}\n\nasync function getGeoJsonStores() {\n  const features = await getStoreListFromAirtable();\n  return {\n    type: \"FeatureCollection\",\n    features: [...features],\n  };\n}\n\n(async function () {\n  const stores = await getGeoJsonStores();\n\n  stores.features.forEach(function (store, i) {\n    store.properties.id = i;\n  });\n\n  map.on(\"load\", function (e) {\n    map.addSource(\"places\", {\n      type: \"geojson\",\n      data: stores,\n    });\n    buildLocationList(stores);\n    addMarkers();\n  });\n\n  function addMarkers() {\n    stores.features.forEach(function (marker) {\n      const el = document.createElement(\"div\");\n      el.id = \"marker-\" + marker.properties.id;\n      el.className = \"marker\";\n\n      new mapboxgl.Marker(el, { offset: [0, -23] })\n        .setLngLat(marker.geometry.coordinates)\n        .addTo(map);\n\n      el.addEventListener(\"click\", function (e) {\n        flyToStore(marker);\n        createPopUp(marker);\n        const activeItem = document.getElementsByClassName(\"active\");\n        e.stopPropagation();\n        if (activeItem[0]) {\n          activeItem[0].classList.remove(\"active\");\n        }\n        const listing = document.getElementById(\n          \"listing-\" + marker.properties.id\n        );\n        listing.classList.add(\"active\");\n      });\n    });\n  }\n\n  function buildLocationList(data) {\n    data.features.forEach(function (store, i) {\n      const prop = store.properties;\n\n      const listings = document.getElementById(\"listings\");\n      const listing = listings.appendChild(document.createElement(\"div\"));\n      listing.id = \"listing-\" + prop.id;\n      listing.className = \"item\";\n\n      const link = listing.appendChild(document.createElement(\"a\"));\n      link.href = \"#\";\n      link.className = \"title\";\n      link.id = \"link-\" + prop.id;\n      link.innerHTML = prop.address;\n\n      const details = listing.appendChild(document.createElement(\"div\"));\n      details.innerHTML = prop.city;\n      if (prop.phone) {\n        details.innerHTML += \" · \" + prop.phoneFormatted;\n      }\n\n      link.addEventListener(\"click\", function (e) {\n        for (let feature of data.features) {\n          if (this.id === \"link-\" + feature.properties.id) {\n            flyToStore(feature);\n            createPopUp(feature);\n          }\n        }\n        const activeItem = document.getElementsByClassName(\"active\");\n        if (activeItem[0]) {\n          activeItem[0].classList.remove(\"active\");\n        }\n        this.parentNode.classList.add(\"active\");\n      });\n    });\n  }\n\n  function flyToStore(currentFeature) {\n    map.flyTo({\n      center: currentFeature.geometry.coordinates,\n      zoom: 15,\n    });\n  }\n\n  function createPopUp(currentFeature) {\n    const popUps = document.getElementsByClassName(\"mapboxgl-popup\");\n    if (popUps[0]) popUps[0].remove();\n    const popup = new mapboxgl.Popup({ closeOnClick: false })\n      .setLngLat(currentFeature.geometry.coordinates)\n      .setHTML(\n        \"<h3>Sweetgreen</h3>\" +\n          \"<h4>\" +\n          currentFeature.properties.address +\n          \"</h4>\"\n      )\n      .addTo(map);\n  }\n})();\n"]}