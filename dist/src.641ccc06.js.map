{"version":3,"sources":["index.js"],"names":["Element","prototype","remove","parentNode","removeChild","mapboxgl","accessToken","map","Map","container","style","center","zoom","scrollZoom","stores","type","features","geometry","coordinates","properties","phoneFormatted","phone","address","city","country","crossStreet","postalCode","state","cc","addMarkers","forEach","marker","el","document","createElement","id","className","Marker","offset","setLngLat","addTo","addEventListener","e","flyToStore","createPopUp","activeItem","getElementsByClassName","stopPropagation","classList","getElementById","add","buildLocationList","data","store","i","prop","listing","appendChild","link","href","innerHTML","details","length","clickedListing","currentFeature","flyTo","popUps","Popup","closeOnClick","setHTML","on","addSource"],"mappings":"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","file":"src.641ccc06.js","sourceRoot":"../src","sourcesContent":["if (!(\"remove\" in Element.prototype)) {\n  Element.prototype.remove = function () {\n    if (this.parentNode) {\n      this.parentNode.removeChild(this);\n    }\n  };\n}\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoidGl0b3VhbmNyZWFjaCIsImEiOiJja2hheDd2MnIwa280MnBrNG5wazhmbXY3In0.hIQY0ILrWDV0RVSO5HWcYQ\";\n\nconst map = new mapboxgl.Map({\n  container: \"map\",\n  style: \"mapbox://styles/mapbox/light-v10\",\n  center: [-77.034084142948, 38.909671288923],\n  zoom: 13,\n  scrollZoom: false,\n});\n\nconst stores = {\n  type: \"FeatureCollection\",\n  features: [\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-77.034084142948, 38.909671288923],\n      },\n      properties: {\n        phoneFormatted: \"(202) 234-7336\",\n        phone: \"2022347336\",\n        address: \"1471 P St NW\",\n        city: \"Washington DC\",\n        country: \"United States\",\n        crossStreet: \"at 15th St NW\",\n        postalCode: \"20005\",\n        state: \"D.C.\",\n      },\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-77.049766, 38.900772],\n      },\n      properties: {\n        phoneFormatted: \"(202) 507-8357\",\n        phone: \"2025078357\",\n        address: \"2221 I St NW\",\n        city: \"Washington DC\",\n        country: \"United States\",\n        crossStreet: \"at 22nd St NW\",\n        postalCode: \"20037\",\n        state: \"D.C.\",\n      },\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-77.043929, 38.910525],\n      },\n      properties: {\n        phoneFormatted: \"(202) 387-9338\",\n        phone: \"2023879338\",\n        address: \"1512 Connecticut Ave NW\",\n        city: \"Washington DC\",\n        country: \"United States\",\n        crossStreet: \"at Dupont Circle\",\n        postalCode: \"20036\",\n        state: \"D.C.\",\n      },\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-77.0672, 38.90516896],\n      },\n      properties: {\n        phoneFormatted: \"(202) 337-9338\",\n        phone: \"2023379338\",\n        address: \"3333 M St NW\",\n        city: \"Washington DC\",\n        country: \"United States\",\n        crossStreet: \"at 34th St NW\",\n        postalCode: \"20007\",\n        state: \"D.C.\",\n      },\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-77.002583742142, 38.887041080933],\n      },\n      properties: {\n        phoneFormatted: \"(202) 547-9338\",\n        phone: \"2025479338\",\n        address: \"221 Pennsylvania Ave SE\",\n        city: \"Washington DC\",\n        country: \"United States\",\n        crossStreet: \"btwn 2nd & 3rd Sts. SE\",\n        postalCode: \"20003\",\n        state: \"D.C.\",\n      },\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-76.933492720127, 38.99225245786],\n      },\n      properties: {\n        address: \"8204 Baltimore Ave\",\n        city: \"College Park\",\n        country: \"United States\",\n        postalCode: \"20740\",\n        state: \"MD\",\n      },\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-77.097083330154, 38.980979],\n      },\n      properties: {\n        phoneFormatted: \"(301) 654-7336\",\n        phone: \"3016547336\",\n        address: \"4831 Bethesda Ave\",\n        cc: \"US\",\n        city: \"Bethesda\",\n        country: \"United States\",\n        postalCode: \"20814\",\n        state: \"MD\",\n      },\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-77.359425054188, 38.958058116661],\n      },\n      properties: {\n        phoneFormatted: \"(571) 203-0082\",\n        phone: \"5712030082\",\n        address: \"11935 Democracy Dr\",\n        city: \"Reston\",\n        country: \"United States\",\n        crossStreet: \"btw Explorer & Library\",\n        postalCode: \"20190\",\n        state: \"VA\",\n      },\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-77.10853099823, 38.880100922392],\n      },\n      properties: {\n        phoneFormatted: \"(703) 522-2016\",\n        phone: \"7035222016\",\n        address: \"4075 Wilson Blvd\",\n        city: \"Arlington\",\n        country: \"United States\",\n        crossStreet: \"at N Randolph St.\",\n        postalCode: \"22203\",\n        state: \"VA\",\n      },\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-75.28784, 40.008008],\n      },\n      properties: {\n        phoneFormatted: \"(610) 642-9400\",\n        phone: \"6106429400\",\n        address: \"68 Coulter Ave\",\n        city: \"Ardmore\",\n        country: \"United States\",\n        postalCode: \"19003\",\n        state: \"PA\",\n      },\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-75.20121216774, 39.954030175164],\n      },\n      properties: {\n        phoneFormatted: \"(215) 386-1365\",\n        phone: \"2153861365\",\n        address: \"3925 Walnut St\",\n        city: \"Philadelphia\",\n        country: \"United States\",\n        postalCode: \"19104\",\n        state: \"PA\",\n      },\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-77.043959498405, 38.903883387232],\n      },\n      properties: {\n        phoneFormatted: \"(202) 331-3355\",\n        phone: \"2023313355\",\n        address: \"1901 L St. NW\",\n        city: \"Washington DC\",\n        country: \"United States\",\n        crossStreet: \"at 19th St\",\n        postalCode: \"20036\",\n        state: \"D.C.\",\n      },\n    },\n  ],\n};\n\n/**\n * Assign a unique id to each store. You'll use this `id`\n * later to associate each point on the map with a listing\n * in the sidebar.\n */\nstores.features.forEach(function (store, i) {\n  store.properties.id = i;\n});\n\nmap.on(\"load\", function (e) {\n  map.addSource(\"places\", {\n    type: \"geojson\",\n    data: stores,\n  });\n  buildLocationList(stores);\n  addMarkers();\n});\n\nfunction addMarkers() {\n  stores.features.forEach(function (marker) {\n    const el = document.createElement(\"div\");\n    el.id = \"marker-\" + marker.properties.id;\n    el.className = \"marker\";\n\n    new mapboxgl.Marker(el, { offset: [0, -23] })\n      .setLngLat(marker.geometry.coordinates)\n      .addTo(map);\n\n    el.addEventListener(\"click\", function (e) {\n      flyToStore(marker);\n      createPopUp(marker);\n      const activeItem = document.getElementsByClassName(\"active\");\n      e.stopPropagation();\n      if (activeItem[0]) {\n        activeItem[0].classList.remove(\"active\");\n      }\n      const listing = document.getElementById(\"listing-\" + marker.properties.id);\n      listing.classList.add(\"active\");\n    });\n  });\n}\n\nfunction buildLocationList(data) {\n  data.features.forEach(function (store, i) {\n    const prop = store.properties;\n\n    const listings = document.getElementById(\"listings\");\n    const listing = listings.appendChild(document.createElement(\"div\"));\n    listing.id = \"listing-\" + prop.id;\n    listing.className = \"item\";\n\n    const link = listing.appendChild(document.createElement(\"a\"));\n    link.href = \"#\";\n    link.className = \"title\";\n    link.id = \"link-\" + prop.id;\n    link.innerHTML = prop.address;\n\n    const details = listing.appendChild(document.createElement(\"div\"));\n    details.innerHTML = prop.city;\n    if (prop.phone) {\n      details.innerHTML += \" · \" + prop.phoneFormatted;\n    }\n\n    link.addEventListener(\"click\", function (e) {\n      for (let i = 0; i < data.features.length; i++) {\n        if (this.id === \"link-\" + data.features[i].properties.id) {\n          const clickedListing = data.features[i];\n          flyToStore(clickedListing);\n          createPopUp(clickedListing);\n        }\n      }\n      const activeItem = document.getElementsByClassName(\"active\");\n      if (activeItem[0]) {\n        activeItem[0].classList.remove(\"active\");\n      }\n      this.parentNode.classList.add(\"active\");\n    });\n  });\n}\n\nfunction flyToStore(currentFeature) {\n  map.flyTo({\n    center: currentFeature.geometry.coordinates,\n    zoom: 15,\n  });\n}\n\nfunction createPopUp(currentFeature) {\n  const popUps = document.getElementsByClassName(\"mapboxgl-popup\");\n  if (popUps[0]) popUps[0].remove();\n  const popup = new mapboxgl.Popup({ closeOnClick: false })\n    .setLngLat(currentFeature.geometry.coordinates)\n    .setHTML(\n      \"<h3>Sweetgreen</h3>\" +\n        \"<h4>\" +\n        currentFeature.properties.address +\n        \"</h4>\"\n    )\n    .addTo(map);\n}\n"]}